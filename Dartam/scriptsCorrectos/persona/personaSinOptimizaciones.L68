000012DC Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 07/02/2024 15:30:39

00000000                             1  ; ==============================================================================
00000000                             2  ; TITLE       : persona
00000000                             3  ; COMPILED BY : jartu
00000000                             4  ; COMPILER BY : Juan Arturo Abaurrea Calafell
00000000                             5  ;               Dani Salanova Dmitriyev
00000000                             6  ;               Marta González Juan
00000000                             7  ; ==============================================================================
00000000                             8  
00001000                             9              ORG         $1000       ; Origen
00001000                            10  
00001000                            11  persona:    DS.L 1                  ; Inicializando el miembro id de la tupla persona
00001004                            12              DS.L 1                  ; Inicializando el miembro inicial de la tupla persona
00001008= 00000000                  13              DC.L 0                  ; Inicializando el miembro hambre de la tupla persona
0000100C= 00000051                  14  t           DC.L 81                 ; INT
00001010= 00000000                  15  t_1         DC.L 0                  ; INT
00001014= 00000001                  16  t_2         DC.L 1                  ; INT
00001018= 00000000                  17  t_3         DC.L 0                  ; BOOLEAN
0000101C= 00000051                  18  t_4         DC.L 81                 ; INT
00001020= 00000001                  19  t_5         DC.L 1                  ; INT
00001024= 70 72 75 65 62 61 ...     20  t_7         DC.B 'prueba.txt'       ; STRING
0000102E= 00                        21              DC.B 0                  ; Los strings y chars acaban en 0
00001030                            22              DS.W 0                  ; No pueden haber variables en zonas de memoria impar
00001030= 45 72 72 6F 72 20 ...     23  errread     DC.B 'Error de lectura',0  ; Mensaje de error
00001042                            24              DS.W 0                  ; Para evitar imparidad
00001042= 00000000                  25  t_8         DC.L 0                  ; INT
00001046= 00000004                  26  t_9         DC.L 4                  ; INT
0000104A                            27  idpersona   DS.L 1                  ; INT
0000104E                            28  str_1       DS.B 256                ; STRING
0000114E= 00                        29              DC.B 0                  ; Los strings y chars acaban en 0
00001150                            30              DS.W 0                  ; No pueden haber variables en zonas de memoria impar
00001150                            31  i           DS.L 1                  ; INT
00001154                            32  t_6         DS.L 1                  ; INT
00001158                            33  inicial     DS.L 1                  ; CHAR
0000115C                            34  p           DS.L 1                  ; POINTER TO ARRAY, TUPLE OR STRING
00001160                            35  str         DS.B 256                ; STRING
00001260= 00                        36              DC.B 0                  ; Los strings y chars acaban en 0
00001262                            37              DS.W 0                  ; No pueden haber variables en zonas de memoria impar
00001262                            38  d_str       DS.L 1                  ; INT
00001266                            39  d_str_1     DS.L 1                  ; INT
0000126A                            40  
0000126A                            41  ; --------- SUBROUTINES             
0000126A  226F 0008                 42  e_from      MOVEA.L     8(SP), A1   ; Pre: (A1) null terminated file name
0000126E  246F 0004                 43              MOVEA.L     4(SP), A2   ; File information -> A2
00001272  7033                      44              MOVE.L      #51, D0     ; Task 51 of TRAP 15: Open existing file
00001274  4E4F                      45              TRAP        #15         ; Interruption generated
00001276  B07C 0002                 46              CMP.W       #2, D0      ; Si error
0000127A  6700 002E                 47              BEQ         e_from0     ; Fin
0000127E  243C 00000100             48              MOVE.L      #256, D2    
00001284  7035                      49              MOVE.L      #53, D0     ; Task 53 of TRAP 15: Read file
00001286  224A                      50              MOVEA.L     A2, A1      
00001288  4E4F                      51              TRAP        #15         ; Interruption generated
0000128A  B07C 0001                 52              CMP.W       #1, D0      ; Si vacío
0000128E  6600 000C                 53              BNE         emptyfile   ; Fin
00001292  B47C 0100                 54              CMP.W       #256, D2    ; Si vacío
00001296  6600 0004                 55              BNE         emptyfile   ; Fin
0000129A  4282                      56              CLR.L       D2          
0000129C  224A                      57  emptyfile   MOVEA.L     A2, A1      
0000129E  D3C2                      58              ADDA.L      D2, A1      
000012A0  12BC 0000                 59              MOVE.B      #0, (A1)    
000012A4  7038                      60              MOVE.L      #56, D0     ; Task 56 of TRAP 15: Close file
000012A6  4E4F                      61              TRAP        #15         ; Interruption generated
000012A8  4E75                      62              RTS                     ; RETURN TO SUBROUTINE ...
000012AA  43F8 1030                 63  e_from0:    LEA.L       errread, A1 ; A1 = mnsj error
000012AE  700D                      64              MOVE.L      #13, D0     ; Task 13 of TRAP 15: Display the NULL terminated string pointed to by (A1) with CR, LF
000012B0  4E4F                      65              TRAP        #15         ; Interruption generated
000012B2  4E75                      66              RTS                     ; RETURN TO SUBROUTINE ...
000012B4  226F 0004                 67  e_show      MOVEA.L     4(SP), A1   ; A1 = POP FROM STACK
000012B8  700D                      68              MOVE.L      #13, D0     ; Task 13 of TRAP 15: Display the NULL terminated string pointed to by (A1) with CR, LF
000012BA  4E4F                      69              TRAP        #15         ; Interruption generated
000012BC  4E75                      70              RTS                     ; RETURN TO SUBROUTINE ...
000012BE  41F8 1000                 71  initpersona LEA.L       persona, A0 ; load persona into A0
000012C2  226F 0004                 72              MOVEA.L     4(SP), A1   ; load instance into A1
000012C6  7003                      73              MOVE.L      #3, D0      
000012C8  B0BC 00000000             74  nextlongwordpersona CMP.L       #0, D0 
000012CE  6700 000A                 75              BEQ         endinitpersona 
000012D2  22D8                      76              MOVE.L      (A0)+, (A1)+ ; copy 4 bytes
000012D4  5380                      77              SUB.L       #1, D0      
000012D6  4EF8 12C8                 78              JMP         nextlongwordpersona 
000012DA                            79  endinitpersona                      ; end of loop
000012DA  4E75                      80              RTS                     
000012DC                            81  
000012DC                            82  
000012DC                            83  ; --------- INITIALIZATION          
000012DC                            84  persona0                            ; Etiqueta inicial (main)
000012DC                            85  
000012DC  7020                      86              MOVE.L      #32, D0     ; Task 32 of TRAP 15: Hardware/Simulator
000012DE  123C 0005                 87              MOVE.B      #5, D1      ; Enable exception processing (for input/output)
000012E2  4E4F                      88              TRAP        #15         ; Interruption generated
000012E4  4EB9 000012EE             89              JSR         e_inicio    ; Se ejecuta el main
000012EA  FFFF FFFF                 90              SIMHALT                 ; Fin de la ejecución
000012EE                            91  
000012EE                            92  ; --------- e_inicio: skip          
000012EE                            93                                      
000012EE                            94  ; --------- pmb e_inicio            
000012EE                            95  ; --------- t = 81                  
000012EE  7051                      96  e_inicio:   MOVE.L      #81, D0     ; D0 = #81
000012F0  21C0 100C                 97              MOVE.L      D0, t       ; t = D0
000012F4                            98  ; --------- d_str = t               
000012F4  2038 100C                 99              MOVE.L      t, D0       ; D0 = t
000012F8  21C0 1262                100              MOVE.L      D0, d_str   ; d_str = D0
000012FC                           101  ; --------- t_1 = 0                 
000012FC  7000                     102              MOVE.L      #0, D0      ; D0 = #0
000012FE  21C0 1010                103              MOVE.L      D0, t_1     ; t_1 = D0
00001302                           104  ; --------- i = t_1                 
00001302  2038 1010                105              MOVE.L      t_1, D0     ; D0 = t_1
00001306  21C0 1150                106              MOVE.L      D0, i       ; i = D0
0000130A                           107  ; --------- e: skip                 
0000130A                           108                                      
0000130A                           109  ; --------- t_2 = 1                 
0000130A  7001                     110  .e:         MOVE.L      #1, D0      ; D0 = #1
0000130C  21C0 1014                111              MOVE.L      D0, t_2     ; t_2 = D0
00001310                           112  ; --------- if i < t_2 goto e_3     
00001310  2038 1150                113              MOVE.L      i, D0       ; D0 = i
00001314  2238 1014                114              MOVE.L      t_2, D1     ; D1 = t_2
00001318  B081                     115              CMP.L       D1, D0      ; UPDATE FLAGS WITH D0 - D1
0000131A  6D00 000E                116              BLT         .e_3        ; IF (N XOR V) FLAGS = 1 GOTO .e_3
0000131E                           117  ; --------- t_3 = 0                 
0000131E  7000                     118              MOVE.L      #0, D0      ; D0 = #0
00001320  21C0 1018                119              MOVE.L      D0, t_3     ; t_3 = D0
00001324                           120  ; --------- goto e_4                
00001324  4EF9 00001330            121              JMP         .e_4        ; goto .e_4
0000132A                           122  ; --------- e_3: skip               
0000132A                           123                                      
0000132A                           124  ; --------- t_3 = -1                
0000132A  70FF                     125  .e_3:       MOVE.L      #-1, D0     ; D0 = #-1
0000132C  21C0 1018                126              MOVE.L      D0, t_3     ; t_3 = D0
00001330                           127  ; --------- e_4: skip               
00001330                           128                                      
00001330                           129  ; --------- if t_3 == 0 goto e_1    
00001330  2038 1018                130  .e_4:       MOVE.L      t_3, D0     ; D0 = t_3
00001334  7200                     131              MOVE.L      #0, D1      ; D1 = #0
00001336  B081                     132              CMP.L       D1, D0      ; UPDATE FLAGS WITH D0 - D1
00001338  6700 0030                133              BEQ         .e_1        ; IF Z FLAG = 1 GOTO .e_1
0000133C                           134  ; --------- t_4 = 81                
0000133C  7051                     135              MOVE.L      #81, D0     ; D0 = #81
0000133E  21C0 101C                136              MOVE.L      D0, t_4     ; t_4 = D0
00001342                           137  ; --------- d_str_1 = t_4           
00001342  2038 101C                138              MOVE.L      t_4, D0     ; D0 = t_4
00001346  21C0 1266                139              MOVE.L      D0, d_str_1 ; d_str_1 = D0
0000134A                           140  ; --------- e_2: skip               
0000134A                           141                                      
0000134A                           142  ; --------- t_5 = 1                 
0000134A  7001                     143  .e_2:       MOVE.L      #1, D0      ; D0 = #1
0000134C  21C0 1020                144              MOVE.L      D0, t_5     ; t_5 = D0
00001350                           145  ; --------- t_6 = i + t_5           
00001350  2038 1150                146              MOVE.L      i, D0       ; D0 = i
00001354  2238 1020                147              MOVE.L      t_5, D1     ; D1 = t_5
00001358  D280                     148              ADD.L       D0, D1      ; D1 = D1 + D0
0000135A  21C1 1154                149              MOVE.L      D1, t_6     ; t_6 = D1
0000135E                           150  ; --------- i = t_6                 
0000135E  2038 1154                151              MOVE.L      t_6, D0     ; D0 = t_6
00001362  21C0 1150                152              MOVE.L      D0, i       ; i = D0
00001366                           153  ; --------- goto e                  
00001366  4EF8 130A                154              JMP         .e          ; goto .e
0000136A                           155  ; --------- e_1: skip               
0000136A                           156                                      
0000136A                           157  ; --------- t_7 = prueba.txt        
0000136A                           158  ; --------- param_s t_7             
0000136A  41F8 1024                159  .e_1:       LEA.L       t_7, A0     ; A0 = t_7
0000136E  2F08                     160              MOVE.L      A0, -(SP)   ; PUSH INTO STACK A0
00001370                           161  ; --------- param_s str             
00001370  41F8 1160                162              LEA.L       str, A0     ; A0 = str
00001374  2F08                     163              MOVE.L      A0, -(SP)   ; PUSH INTO STACK A0
00001376                           164  ; --------- call e_from             
00001376  4EB8 126A                165              JSR         e_from      ; JUMP TO SUBROUTINE e_from
0000137A  508F                     166              ADDA.L      #8, SP      ; SP = SP + 8
0000137C                           167  ; --------- param_s str             
0000137C  41F8 1160                168              LEA.L       str, A0     ; A0 = str
00001380  2F08                     169              MOVE.L      A0, -(SP)   ; PUSH INTO STACK A0
00001382                           170  ; --------- call e_show             
00001382  4EB8 12B4                171              JSR         e_show      ; JUMP TO SUBROUTINE e_show
00001386  588F                     172              ADDA.L      #4, SP      ; SP = SP + 4
00001388                           173  ; --------- rtn e_inicio            
00001388  4E75                     174              RTS                     ; RETURN TO SUBROUTINE e_inicio
0000138A                           175  
0000138A                           176  
0000138A                           177  
0000138A                           178  
0000138A                           179  ; --------- e_nuevapersona: skip    
0000138A                           180                                      
0000138A                           181  ; --------- pmb e_nuevapersona      
0000138A  202F 0004                182  e_nuevapersona: MOVE.L      4(SP), D0 ; D0 = POP FROM STACK
0000138E  21C0 1158                183              MOVE.L      D0, inicial ; inicial = D0
00001392  202F 0008                184              MOVE.L      8(SP), D0   ; D0 = POP FROM STACK
00001396  21C0 104A                185              MOVE.L      D0, idpersona ; idpersona = D0
0000139A  202F 000C                186              MOVE.L      12(SP), D0  ; D0 = POP FROM STACK
0000139E  21C0 115C                187              MOVE.L      D0, p       ; p = D0
000013A2                           188  ; --------- t_8 = 0                 
000013A2  7000                     189              MOVE.L      #0, D0      ; D0 = #0
000013A4  21C0 1042                190              MOVE.L      D0, t_8     ; t_8 = D0
000013A8                           191  ; --------- p[t_8] = idpersona      
000013A8  2038 104A                192              MOVE.L      idpersona, D0 ; D0 = idpersona
000013AC  2238 1042                193              MOVE.L      t_8, D1     ; D1 = t_8
000013B0  2078 115C                194              MOVEA.L     p, A0       ; A0 = p
000013B4  D1C1                     195              ADDA.L      D1, A0      ; A0 = A0 + D1
000013B6  2080                     196              MOVE.L      D0, (A0)    ; (A0) = D0
000013B8                           197  ; --------- t_9 = 4                 
000013B8  7004                     198              MOVE.L      #4, D0      ; D0 = #4
000013BA  21C0 1046                199              MOVE.L      D0, t_9     ; t_9 = D0
000013BE                           200  ; --------- p[t_9] = inicial        
000013BE  2038 1158                201              MOVE.L      inicial, D0 ; D0 = inicial
000013C2  2238 1046                202              MOVE.L      t_9, D1     ; D1 = t_9
000013C6  2078 115C                203              MOVEA.L     p, A0       ; A0 = p
000013CA  D1C1                     204              ADDA.L      D1, A0      ; A0 = A0 + D1
000013CC  2080                     205              MOVE.L      D0, (A0)    ; (A0) = D0
000013CE                           206  ; --------- rtn e_nuevapersona      
000013CE  4E75                     207              RTS                     ; RETURN TO SUBROUTINE e_nuevapersona
000013D0                           208  
000013D0                           209  
000013D0                           210              END persona0            ; Fin del programa

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
D_STR               1262
D_STR_1             1266
EMPTYFILE           129C
ENDINITPERSONA      12DA
ERRREAD             1030
E_FROM              126A
E_FROM0             12AA
E_INICIO            12EE
E_INICIO:E          130A
E_INICIO:E_1        136A
E_INICIO:E_2        134A
E_INICIO:E_3        132A
E_INICIO:E_4        1330
E_NUEVAPERSONA      138A
E_SHOW              12B4
I                   1150
IDPERSONA           104A
INICIAL             1158
INITPERSONA         12BE
NEXTLONGWORDPERSONA  12C8
P                   115C
PERSONA             1000
PERSONA0            12DC
STR                 1160
STR_1               104E
T                   100C
T_1                 1010
T_2                 1014
T_3                 1018
T_4                 101C
T_5                 1020
T_6                 1154
T_7                 1024
T_8                 1042
T_9                 1046
