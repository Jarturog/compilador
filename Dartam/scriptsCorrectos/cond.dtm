f vacio inicio(){	parte1();	parte2();	parte3();}f vacio parte1(){	show("PARTE 1");	show("Muestra de un mal uso del switch (sin break)");	ent a: (3 = 3) ? 3 -> 4;	si a = 3 {		show("a: 3");	} sino a = 4 {		show("a: 4");	}	switch(a);	ent b: 2**3;	si b = 8 {		show("b: 8");	}	switch(b);	show("");}f vacio parte2(){	show("PARTE 2");	show("Muestra de un buen uso del switch (con break)");	ent a: (3 = 3) ? 3 -> 4;	si a = 3 {		show("a: 3");	} sino a = 4 {		show("a: 4");	}	switchConBreak(a);	ent b: 2**3;	si b = 8 {		show("b: 8");	}	switchConBreak(b);	show("");}f vacio parte3(){	show("PARTE 3");	show("Muestra de un buen uso de si, sino y no");	ent num1: 1, num2: 1;	ent aux1: --num1;	ent aux2: num2--;	show("num1:1    num2:1    aux1:--num1    aux2:num2--");	si (aux1 = 0) & (num1 = 0) {		show("num1: 0 (aux1: 0)");	} 	si (aux2 = 1) & (num1 = 0) {		show("num2: 0 (aux2: 1)");	}	ifs(aux1);	ifs(aux2);	show("");}f vacio switch(ent v){	v \: 2;	select v {		caso 0 -> 			{				show("El numero introducido es par");			}		caso 1 -> 			{				show("El numero introducido es impar");			}		caso _ -> 			{				show("Error, el numero no es par ni impar");			}	}}f vacio switchConBreak(ent v){	v \: 2;	select v {		caso 0 -> 			{				show("El numero introducido es par");				parar;			}		caso 1 -> 			{				show("El numero introducido es impar");				parar;			}		caso _ -> 			{				show("Error, el numero no es par ni impar");				parar;			}	}}f vacio ifs(ent v){	v \: 2;	si v = 0 {		show("El numero introducido es par");	} sino v = 1 {		show("El numero introducido es impar");	} no {		show("Error, el numero no es par ni impar");	}}