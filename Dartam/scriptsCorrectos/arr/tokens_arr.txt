KW_METHOD: f
TYPE_VOID: vacio
KW_MAIN: inicio
SYM_LPAREN: (
SYM_RPAREN: )
SYM_LKEY: {
TYPE_CHAR: car
SYM_LBRACKET: [
VAL_DECIMAL: 3
SYM_RBRACKET: ]
SYM_LBRACKET: [
VAL_DECIMAL: 3
SYM_RBRACKET: ]
ID: matrizCars
SYM_ENDINSTR: ;
ID: matrizCars
SYM_LBRACKET: [
VAL_DECIMAL: 0
SYM_RBRACKET: ]
SYM_LBRACKET: [
VAL_DECIMAL: 0
SYM_RBRACKET: ]
OP_ASIG: :
VAL_CHAR: 'a'
SYM_ENDINSTR: ;
ID: matrizCars
SYM_LBRACKET: [
VAL_DECIMAL: 0
SYM_RBRACKET: ]
SYM_LBRACKET: [
VAL_DECIMAL: 1
SYM_RBRACKET: ]
OP_ASIG: :
VAL_CHAR: 'b'
SYM_ENDINSTR: ;
ID: matrizCars
SYM_LBRACKET: [
VAL_DECIMAL: 1
SYM_RBRACKET: ]
SYM_LBRACKET: [
VAL_DECIMAL: 0
SYM_RBRACKET: ]
OP_ASIG: :
VAL_CHAR: 'd'
SYM_ENDINSTR: ;
TYPE_CHAR: car
SYM_LBRACKET: [
SYM_RBRACKET: ]
SYM_LBRACKET: [
SYM_RBRACKET: ]
ID: c
SYM_ENDINSTR: ;
KW_WHILE: loop
TYPE_INT: ent
ID: i
OP_ASIG: :
VAL_DECIMAL: 0
SYM_ENDINSTR: ;
ID: i
OP_MENOR: <
VAL_DECIMAL: 3
SYM_ENDINSTR: ;
ID: i
OP_INC: ++
SYM_LKEY: {
KW_WHILE: loop
TYPE_INT: ent
ID: j
OP_ASIG: :
VAL_DECIMAL: 0
SYM_ENDINSTR: ;
ID: j
OP_MENOR: <
VAL_DECIMAL: 3
SYM_ENDINSTR: ;
ID: j
OP_INC: ++
SYM_LKEY: {
ID: matrizCars
SYM_LBRACKET: [
ID: i
SYM_RBRACKET: ]
SYM_LBRACKET: [
ID: j
SYM_RBRACKET: ]
OP_ASIG: :
VAL_CHAR: 'A'
OP_SUM: +
SYM_LPAREN: (
TYPE_CHAR: car
SYM_RPAREN: )
SYM_LPAREN: (
ID: i
OP_SUM: +
ID: j
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
SYM_LPAREN: (
TYPE_CHAR: car
SYM_LBRACKET: [
SYM_RBRACKET: ]
SYM_RPAREN: )
ID: matrizCars
SYM_LBRACKET: [
ID: i
SYM_RBRACKET: ]
SYM_LBRACKET: [
ID: j
SYM_RBRACKET: ]
SYM_RPAREN: )
SYM_ENDINSTR: ;
SYM_RKEY: }
SYM_RKEY: }
SYM_RKEY: }
