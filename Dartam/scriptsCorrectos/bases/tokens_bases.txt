KW_METHOD: f
TYPE_VOID: vacio
KW_MAIN: inicio
SYM_LPAREN: (
SYM_RPAREN: )
SYM_LKEY: {
SHOW: show
SYM_LPAREN: (
VAL_CADENA: "Prueba de bases"
SYM_RPAREN: )
SYM_ENDINSTR: ;
TYPE_INT: ent
ID: binario
OP_ASIG: :
VAL_BINARIO: 0b110000
SYM_ENDINSTR: ;
TYPE_INT: ent
ID: octal
OP_ASIG: :
VAL_OCTAL: 0o61
SYM_ENDINSTR: ;
TYPE_INT: ent
ID: hex
OP_ASIG: :
VAL_HEX: 0x32
SYM_ENDINSTR: ;
TYPE_INT: ent
ID: dec
OP_ASIG: :
VAL_DECIMAL: 51
SYM_ENDINSTR: ;
TYPE_INT: ent
ID: zero1
OP_ASIG: :
VAL_DECIMAL: 0
SYM_ENDINSTR: ;
TYPE_INT: ent
ID: zero2
OP_ASIG: :
VAL_DECIMAL: 00
SYM_ENDINSTR: ;
TYPE_INT: ent
ID: zero3
OP_ASIG: :
VAL_DECIMAL: 000
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
VAL_CADENA: "Binario: 0b110000"
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
SYM_LPAREN: (
TYPE_CHAR: car
SYM_LBRACKET: [
SYM_RBRACKET: ]
SYM_RPAREN: )
SYM_LPAREN: (
TYPE_CHAR: car
SYM_RPAREN: )
ID: binario
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
VAL_CADENA: "Octal: 0o61"
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
SYM_LPAREN: (
TYPE_CHAR: car
SYM_LBRACKET: [
SYM_RBRACKET: ]
SYM_RPAREN: )
SYM_LPAREN: (
TYPE_CHAR: car
SYM_RPAREN: )
ID: octal
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
VAL_CADENA: "Hexadecimal: 0x32"
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
SYM_LPAREN: (
TYPE_CHAR: car
SYM_LBRACKET: [
SYM_RBRACKET: ]
SYM_RPAREN: )
SYM_LPAREN: (
TYPE_CHAR: car
SYM_RPAREN: )
ID: hex
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
VAL_CADENA: "Decimal: 51"
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
SYM_LPAREN: (
TYPE_CHAR: car
SYM_LBRACKET: [
SYM_RBRACKET: ]
SYM_RPAREN: )
SYM_LPAREN: (
TYPE_CHAR: car
SYM_RPAREN: )
ID: dec
SYM_RPAREN: )
SYM_ENDINSTR: ;
TYPE_CHAR: car
ID: b
OP_ASIG: :
VAL_CHAR: 'a'
SYM_ENDINSTR: ;
TYPE_CHAR: car
ID: a
OP_ASIG: :
VAL_CHAR: 'b'
SYM_ENDINSTR: ;
ID: a
OP_SWAP: <>
ID: b
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
VAL_CADENA: "a:"
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
SYM_LPAREN: (
TYPE_CHAR: car
SYM_LBRACKET: [
SYM_RBRACKET: ]
SYM_RPAREN: )
ID: a
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
VAL_CADENA: "b:"
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
SYM_LPAREN: (
TYPE_CHAR: car
SYM_LBRACKET: [
SYM_RBRACKET: ]
SYM_RPAREN: )
ID: b
SYM_RPAREN: )
SYM_ENDINSTR: ;
SYM_RKEY: }
