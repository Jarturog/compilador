f vacio inicio(){
	ent a: 16, b:20;
	inmut ent c1: mcd1(a, b), c2: mcd2(a, b), c3: mcm(a, b);
	si c1 = 4 {
		show("El primer algoritmo de mcd entre 16 y 20 resulta en 4");
	}
	si c2 = 4 {
		show("El segundo algoritmo de mcd entre 16 y 20 resulta en 4");
	}
	si c3 = 80 {
		show("El algoritmo de mcm entre 16 y 20 resulta en 80");
	}
}

f ent mcd1(ent a0, ent b0) {
	ent a, b;
	a: a0; // 16
	b: b0; // 20
	loop (a /= b) {
		si (a > b) {
			a-: b; // 12, 8, 4
		} no {
			b-: a; // 4, 
		}
	}
	pop a;
}

f ent mcm(ent num1, ent num2) {
	ent a, b;
	si num1 > num2 {
		a: num1, b: num2;
	} no {
		a: num2, b: num1;
	}
	ent resultado: (a / mcd2(num1, num2)) * b;
	pop resultado;
}

f ent mcd2(ent num1, ent num2) {
	ent a, b; 
	si num1 > num2 { 
		a: num1, b: num2;
	} no { 
		a: num2, b: num1;
	}
	// a: max(a, b);
	// b: min(a, b);
	ent resultado: 0;
	loop {
		resultado: b;
		b: a \ b;
		a: resultado;

	} b /= 0;
	pop resultado;
}