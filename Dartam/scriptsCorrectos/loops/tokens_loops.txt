TYPE_INT: ent
ID: global
OP_ASIG: :
VAL_DECIMAL: 0
SYM_ENDINSTR: ;
KW_CONST: inmut
TYPE_INT: ent
ID: max_global
OP_ASIG: :
VAL_DECIMAL: 10
SYM_ENDINSTR: ;
KW_METHOD: f
TYPE_VOID: vacio
KW_MAIN: inicio
SYM_LPAREN: (
SYM_RPAREN: )
SYM_LKEY: {
ID: dowhile
SYM_LPAREN: (
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
SYM_LPAREN: (
TYPE_CHAR: car
SYM_LBRACKET: [
SYM_RBRACKET: ]
SYM_RPAREN: )
SYM_LPAREN: (
TYPE_CHAR: car
SYM_RPAREN: )
ID: global
SYM_RPAREN: )
SYM_ENDINSTR: ;
ID: while
SYM_LPAREN: (
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
SYM_LPAREN: (
TYPE_CHAR: car
SYM_LBRACKET: [
SYM_RBRACKET: ]
SYM_RPAREN: )
SYM_LPAREN: (
TYPE_CHAR: car
SYM_RPAREN: )
ID: global
SYM_RPAREN: )
SYM_ENDINSTR: ;
ID: dofor
SYM_LPAREN: (
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
SYM_LPAREN: (
TYPE_CHAR: car
SYM_LBRACKET: [
SYM_RBRACKET: ]
SYM_RPAREN: )
SYM_LPAREN: (
TYPE_CHAR: car
SYM_RPAREN: )
ID: global
SYM_RPAREN: )
SYM_ENDINSTR: ;
ID: for
SYM_LPAREN: (
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
SYM_LPAREN: (
TYPE_CHAR: car
SYM_LBRACKET: [
SYM_RBRACKET: ]
SYM_RPAREN: )
SYM_LPAREN: (
TYPE_CHAR: car
SYM_RPAREN: )
ID: global
SYM_RPAREN: )
SYM_ENDINSTR: ;
SYM_RKEY: }
KW_METHOD: f
TYPE_VOID: vacio
ID: dowhile
SYM_LPAREN: (
SYM_RPAREN: )
SYM_LKEY: {
KW_WHILE: loop
SYM_LKEY: {
OP_INC: ++
ID: global
SYM_ENDINSTR: ;
ID: global
OP_INC: ++
SYM_ENDINSTR: ;
KW_CONTINUE: continuar
SYM_ENDINSTR: ;
SYM_RKEY: }
ID: global
OP_MENOR: <
ID: max_global
SYM_ENDINSTR: ;
SYM_RKEY: }
KW_METHOD: f
TYPE_VOID: vacio
ID: while
SYM_LPAREN: (
SYM_RPAREN: )
SYM_LKEY: {
KW_WHILE: loop
ID: global
OP_MENOR: <
ID: max_global
OP_MUL: *
VAL_DECIMAL: 2
SYM_LKEY: {
OP_INC: ++
ID: global
SYM_ENDINSTR: ;
ID: global
OP_INC: ++
SYM_ENDINSTR: ;
KW_CONTINUE: continuar
SYM_ENDINSTR: ;
SYM_RKEY: }
SYM_RKEY: }
KW_METHOD: f
TYPE_VOID: vacio
ID: dofor
SYM_LPAREN: (
SYM_RPAREN: )
SYM_LKEY: {
KW_WHILE: loop
SYM_LKEY: {
OP_INC: ++
ID: global
SYM_ENDINSTR: ;
ID: global
OP_INC: ++
SYM_ENDINSTR: ;
KW_CONTINUE: continuar
SYM_ENDINSTR: ;
SYM_RKEY: }
SYM_LPAREN: (
SYM_LPAREN: (
TYPE_INT: ent
ID: global
OP_ASIG: :
VAL_DECIMAL: 0
SYM_ENDINSTR: ;
SYM_LPAREN: (
ID: global
OP_MENOR: <
ID: max_global
OP_MUL: *
VAL_DECIMAL: 3
SYM_RPAREN: )
SYM_ENDINSTR: ;
ID: global
OP_INC: ++
SYM_RPAREN: )
SYM_RPAREN: )
SYM_ENDINSTR: ;
SYM_RKEY: }
KW_METHOD: f
TYPE_VOID: vacio
ID: for
SYM_LPAREN: (
SYM_RPAREN: )
SYM_LKEY: {
KW_WHILE: loop
TYPE_INT: ent
ID: global
OP_ASIG: :
VAL_DECIMAL: 0
SYM_ENDINSTR: ;
ID: global
OP_MENOR: <
ID: max_global
OP_MUL: *
VAL_DECIMAL: 4
SYM_ENDINSTR: ;
ID: global
OP_INC: ++
SYM_LKEY: {
OP_INC: ++
ID: global
SYM_ENDINSTR: ;
ID: global
OP_INC: ++
SYM_ENDINSTR: ;
KW_CONTINUE: continuar
SYM_ENDINSTR: ;
SYM_RKEY: }
SYM_RKEY: }
