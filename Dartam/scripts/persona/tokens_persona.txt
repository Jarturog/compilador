KW_METHOD: f
TYPE_VOID: vacio
KW_MAIN: inicio
SYM_LPAREN: (
SYM_RPAREN: )
SYM_LKEY: {
TYPE_CHAR: car
SYM_LBRACKET: [
SYM_RBRACKET: ]
ID: aux
OP_ASIG: :
VAL_CADENA: "hola"
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
ID: aux
SYM_RPAREN: )
SYM_ENDINSTR: ;
SHOW: show
SYM_LPAREN: (
VAL_CADENA: "mundo"
SYM_RPAREN: )
SYM_ENDINSTR: ;
SYM_RKEY: }
KW_METHOD: f
TYPE_VOID: vacio
ID: nuevaPersona
SYM_LPAREN: (
TUPLE: tupla
ID: persona
ID: p
SYM_COMMA: ,
TYPE_INT: ent
ID: idPersona
SYM_COMMA: ,
TYPE_CHAR: car
ID: let
SYM_RPAREN: )
SYM_LKEY: {
ID: p
SYM_PUNTO: .
ID: id
OP_ASIG: :
ID: idPersona
SYM_ENDINSTR: ;
ID: p
SYM_PUNTO: .
ID: let
OP_ASIG: :
ID: let
SYM_ENDINSTR: ;
SYM_RKEY: }
TUPLE: tupla
ID: persona
SYM_LKEY: {
KW_CONST: inmut
TYPE_INT: ent
ID: id
SYM_ENDINSTR: ;
TYPE_CHAR: car
ID: let
SYM_ENDINSTR: ;
SYM_RKEY: }
