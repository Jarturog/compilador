00001032 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 06/02/2024 3:21:22

00000000                             1  ; ==============================================================================
00000000                             2  ; TITLE       : calc3
00000000                             3  ; COMPILED BY : jartu
00000000                             4  ; COMPILER BY : Juan Arturo Abaurrea Calafell
00000000                             5  ;               Dani Salanova Dmitriyev
00000000                             6  ;               Marta González Juan
00000000                             7  ; ==============================================================================
00000000                             8  
00001000                             9              ORG         $1000       ; Origen
00001000                            10  
00001000= 00000010                  11  t           DC.L 16                 ; INT
00001004= 00000014                  12  t_1         DC.L 20                 ; INT
00001008= 00                        13  t_3         DC.B 0                  ; BOOLEAN
00001009= 00                        14              DC.B 0                  ; Los strings y chars acaban en 0
0000100A                            15              DS.W 0                  ; No pueden haber variables en zonas de memoria impar
0000100A= 00000001                  16  t_4         DC.L 1                  ; INT
0000100E                            17  a           DS.L 1                  ; INT
00001012                            18  b           DS.L 1                  ; INT
00001016                            19  t_2         DS.L 1                  ; INT
0000101A                            20  t_5         DS.L 1                  ; INT
0000101E                            21  c1          DS.L 1                  ; INT
00001022                            22  b0          DS.L 1                  ; INT
00001026                            23  a0          DS.L 1                  ; INT
0000102A                            24  a_1         DS.L 1                  ; INT
0000102E                            25  b_1         DS.L 1                  ; INT
00001032                            26  CALC3                               ; Etiqueta inicial (main)
00001032  4EB9 0000103C             27              JSR         e_inicio    ; Se ejecuta el main
00001038  FFFF FFFF                 28              SIMHALT                 ; Fin de la ejecución
0000103C                            29  
0000103C                            30  ; --------- e_inicio: skip          
0000103C                            31                                      
0000103C                            32  ; --------- pmb e_inicio            
0000103C                            33  ; --------- t = 16                  
0000103C  7010                      34  e_inicio:   MOVE.L      #16, D0     ; D0 = #16
0000103E  21C0 1000                 35              MOVE.L      D0, t       ; t = D0
00001042                            36  ; --------- a = t                   
00001042  2038 1000                 37              MOVE.L      t, D0       ; D0 = t
00001046  21C0 100E                 38              MOVE.L      D0, a       ; a = D0
0000104A                            39  ; --------- t_1 = 20                
0000104A  7014                      40              MOVE.L      #20, D0     ; D0 = #20
0000104C  21C0 1004                 41              MOVE.L      D0, t_1     ; t_1 = D0
00001050                            42  ; --------- b = t_1                 
00001050  2038 1004                 43              MOVE.L      t_1, D0     ; D0 = t_1
00001054  21C0 1012                 44              MOVE.L      D0, b       ; b = D0
00001058                            45  ; --------- param_s a               
00001058  2F38 100E                 46              MOVE.L      a, -(SP)    ; PUSH INTO STACK a
0000105C                            47  ; --------- param_s b               
0000105C  2F38 1012                 48              MOVE.L      b, -(SP)    ; PUSH INTO STACK b
00001060                            49  ; --------- call e_mcd1, t_2        
00001060  598F                      50              SUBA.L      #4, SP      ; SP = SP + 4
00001062  4EB9 00001078             51              JSR         e_mcd1      ; JUMP TO SUBROUTINE e_mcd1
00001068  21DF 1016                 52              MOVE.L      (SP)+, t_2  ; t_2 = POP FROM STACK
0000106C  508F                      53              ADDA.L      #8, SP      ; SP = SP + 8
0000106E                            54  ; --------- c1 = t_2                
0000106E  2038 1016                 55              MOVE.L      t_2, D0     ; D0 = t_2
00001072  21C0 101E                 56              MOVE.L      D0, c1      ; c1 = D0
00001076                            57  ; --------- rtn e_inicio            
00001076  4E75                      58              RTS                     ; RETURN TO SUBROUTINE e_inicio
00001078                            59  
00001078                            60  
00001078                            61  
00001078                            62  
00001078                            63  ; --------- e_mcd1: skip            
00001078                            64                                      
00001078                            65  ; --------- pmb e_mcd1              
00001078  21EF 0008 1022            66  e_mcd1:     MOVE.L      8(SP), b0   ; b0 = POP FROM STACK
0000107E  206F 000C                 67              MOVE.L      12(SP), a0  ; a0 = POP FROM STACK
00001082                            68  ; --------- a_1 = a0                
00001082  2008                      69              MOVE.L      a0, D0      ; D0 = a0
00001084  21C0 102A                 70              MOVE.L      D0, a_1     ; a_1 = D0
00001088                            71  ; --------- b_1 = b0                
00001088  2038 1022                 72              MOVE.L      b0, D0      ; D0 = b0
0000108C  21C0 102E                 73              MOVE.L      D0, b_1     ; b_1 = D0
00001090                            74  ; --------- e: skip                 
00001090                            75                                      
00001090                            76  ; --------- if a_1 /= b_1 goto e_3  
00001090  2038 102A                 77  .e:         MOVE.L      a_1, D0     ; D0 = a_1
00001094  B0B8 102E                 78              CMP.L       b_1, D0     ; UPDATE FLAGS WITH D0 - b_1
00001098  6600 0012                 79              BNE         .e_3        ; IF Z FLAG = 0 GOTO .e_3
0000109C                            80  ; --------- t_3 = 0                 
0000109C  4280                      81              CLR.L       D0          ; CLEAR D0
0000109E  103C 0000                 82              MOVE.B      #0, D0      ; D0 = #0
000010A2  11C0 1008                 83              MOVE.B      D0, t_3     ; t_3 = D0
000010A6                            84  ; --------- goto e_4                
000010A6  4EF9 000010B6             85              JMP         .e_4        ; goto .e_4
000010AC                            86  ; --------- e_3: skip               
000010AC                            87                                      
000010AC                            88  ; --------- t_3 = -1                
000010AC  4280                      89  .e_3:       CLR.L       D0          ; CLEAR D0
000010AE  103C 00FF                 90              MOVE.B      #-1, D0     ; D0 = #-1
000010B2  11C0 1008                 91              MOVE.B      D0, t_3     ; t_3 = D0
000010B6                            92  ; --------- e_4: skip               
000010B6                            93                                      
000010B6                            94  ; --------- if t_3 == 0 goto e_1    
000010B6  4280                      95  .e_4:       CLR.L       D0          ; CLEAR D0
000010B8  1038 1008                 96              MOVE.B      t_3, D0     ; D0 = t_3
000010BC  B03C 0000                 97              CMP.B       #0, D0      ; UPDATE FLAGS WITH D0 - #0
000010C0  6700 0022                 98              BEQ         .e_1        ; IF Z FLAG = 1 GOTO .e_1
000010C4                            99  ; --------- t_4 = 1                 
000010C4  7001                     100              MOVE.L      #1, D0      ; D0 = #1
000010C6  21C0 100A                101              MOVE.L      D0, t_4     ; t_4 = D0
000010CA                           102  ; --------- t_5 = a_1 + t_4         
000010CA  2038 102A                103              MOVE.L      a_1, D0     ; D0 = a_1
000010CE  2238 100A                104              MOVE.L      t_4, D1     ; D1 = t_4
000010D2  D280                     105              ADD.L       D0, D1      ; D1 = D1 + D0
000010D4  21C1 101A                106              MOVE.L      D1, t_5     ; t_5 = D1
000010D8                           107  ; --------- a_1 = t_5               
000010D8  2038 101A                108              MOVE.L      t_5, D0     ; D0 = t_5
000010DC  21C0 102A                109              MOVE.L      D0, a_1     ; a_1 = D0
000010E0                           110  ; --------- e_2: skip               
000010E0                           111                                      
000010E0                           112  ; --------- goto e                  
000010E0  4EF8 1090                113  .e_2:       JMP         .e          ; goto .e
000010E4                           114  ; --------- e_1: skip               
000010E4                           115                                      
000010E4                           116  ; --------- rtn e_mcd1, a_1         
000010E4  2F78 102A 0004           117  .e_1:       MOVE.L      a_1, 4(SP)  ; PUSH INTO STACK a_1
000010EA  4E75                     118              RTS                     ; RETURN TO SUBROUTINE e_mcd1
000010EC                           119  
000010EC                           120  
000010EC                           121              END CALC3               ; Fin del programa

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A                   100E
A0                  1026
A_1                 102A
B                   1012
B0                  1022
B_1                 102E
C1                  101E
CALC3               1032
E_INICIO            103C
E_MCD1              1078
E_MCD1:E            1090
E_MCD1:E_1          10E4
E_MCD1:E_2          10E0
E_MCD1:E_3          10AC
E_MCD1:E_4          10B6
T                   1000
T_1                 1004
T_2                 1016
T_3                 1008
T_4                 100A
T_5                 101A
