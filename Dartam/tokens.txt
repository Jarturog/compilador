KW_METHOD: f
TYPE_VOID: vacio
KW_MAIN: inicio
SYM_LPAREN: (
TYPE_STRING: string
SYM_LBRACKET: [
SYM_RBRACKET: ]
KW_ARGS: argumentos
SYM_RPAREN: )
SYM_LKEY: {
KW_TUPLE: tupla
ID: persona
ID: p1
SYM_COMMA: ,
ID: p2
SYM_ENDINSTR: ;
ID: nuevaPersona
SYM_LPAREN: (
ID: p1
SYM_COMMA: ,
VAL_DECIMAL: 1
SYM_COMMA: ,
VAL_CADENA: "paco"
SYM_RPAREN: )
SYM_ENDINSTR: ;
ID: nuevaPersona
SYM_LPAREN: (
ID: p2
SYM_COMMA: ,
VAL_DECIMAL: 2
SYM_COMMA: ,
VAL_CADENA: "pepa"
SYM_RPAREN: )
SYM_ENDINSTR: ;
SYM_RKEY: }
KW_METHOD: f
TYPE_VOID: vacio
ID: nuevaPersona
SYM_LPAREN: (
KW_TUPLE: tupla
ID: persona
ID: p
SYM_COMMA: ,
TYPE_INT: ent
ID: idPersona
SYM_COMMA: ,
TYPE_STRING: string
ID: nombrePersona
SYM_RPAREN: )
SYM_LKEY: {
ID: p
SYM_PUNTO: .
ID: id
OP_ASIG: :
ID: idPersona
SYM_ENDINSTR: ;
ID: p
SYM_PUNTO: .
ID: nombre
OP_ASIG: :
ID: nombrePersona
SYM_ENDINSTR: ;
SYM_RKEY: }
KW_TUPLE: tupla
ID: persona
SYM_LKEY: {
KW_CONST: inmut
TYPE_INT: ent
ID: id
SYM_ENDINSTR: ;
TYPE_STRING: string
ID: nombre
SYM_ENDINSTR: ;
SYM_RKEY: }
